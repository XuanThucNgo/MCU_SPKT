CCS PCM C Compiler, Version 5.015, 5967               17-Dec-23 17:46

               Filename:   E:\BAI TAP VXL\DETHI-GIAIDETHI\2020-2021\BT3_2020-2021_HK1_VDK1.lst

               ROM used:   99 words (1%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           8 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #INCLUDE<16F887.H> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #FUSES INTRC 
.................... #USE DELAY(CLOCK=8M) 
.................... #USE RS232(BAUD=9600,BITS=8,STOP=1,PARITY=N, XMIT=PIN_C6,RCV=PIN_C7) 
....................  
....................  
.................... #DEFINE RUN       PIN_D0  
.................... #DEFINE STOP      PIN_D1  
.................... #DEFINE FEEDBACK  PIN_D2  
....................  
.................... UNSIGNED CHAR DATA=0; 
.................... //VDK2 GUI VDK1 'S' -> SANG 'T' -> TAT 
.................... //VDK1 GUI VDK2 RUN -> 'R' STOP -> 'S' 
....................  
.................... VOID MAIN() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  MOVLW  71
0008:  BSF    03.5
0009:  MOVWF  0F
000A:  MOVF   0F,W
000B:  BSF    03.6
000C:  BCF    07.3
000D:  MOVLW  0C
000E:  BCF    03.6
000F:  MOVWF  19
0010:  MOVLW  A2
0011:  MOVWF  18
0012:  MOVLW  90
0013:  BCF    03.5
0014:  MOVWF  18
0015:  CLRF   20
0016:  MOVLW  FF
0017:  MOVWF  21
0018:  BSF    03.5
0019:  BSF    03.6
001A:  MOVF   09,W
001B:  ANDLW  C0
001C:  MOVWF  09
001D:  BCF    03.6
001E:  BCF    1F.4
001F:  BCF    1F.5
0020:  MOVLW  00
0021:  BSF    03.6
0022:  MOVWF  08
0023:  BCF    03.5
0024:  CLRF   07
0025:  CLRF   08
0026:  CLRF   09
0027:  BCF    03.7
.................... { 
....................    SET_TRIS_D(0X03); 
0028:  MOVLW  03
0029:  BSF    03.5
002A:  BCF    03.6
002B:  MOVWF  08
....................    SET_TRIS_C(0X80); 
002C:  MOVLW  80
002D:  MOVWF  07
002E:  BCF    03.5
002F:  MOVWF  21
....................    //TRANG THAI BAN DAU TAT LED 
....................    OUTPUT_LOW(FEEDBACK); 
0030:  BSF    03.5
0031:  BCF    08.2
0032:  BCF    03.5
0033:  BCF    08.2
....................    WHILE(TRUE) 
....................    { 
....................       //GUI DU LIEU VDK2 
....................       IF(INPUT(RUN)==0) 
0034:  BSF    03.5
0035:  BSF    08.0
0036:  BCF    03.5
0037:  BTFSC  08.0
0038:  GOTO   03D
....................       { 
....................          PUTC('R'); 
0039:  MOVLW  52
003A:  BTFSS  0C.4
003B:  GOTO   03A
003C:  MOVWF  19
....................       } 
....................       IF(INPUT(STOP)==0) 
003D:  BSF    03.5
003E:  BSF    08.1
003F:  BCF    03.5
0040:  BTFSC  08.1
0041:  GOTO   046
....................       { 
....................          PUTC('S'); 
0042:  MOVLW  53
0043:  BTFSS  0C.4
0044:  GOTO   043
0045:  MOVWF  19
....................       } 
....................       //NHAN DU LIEU VDK2 
....................       IF(KBHIT()==1) 
0046:  MOVLW  00
0047:  BTFSC  0C.5
0048:  MOVLW  01
0049:  SUBLW  01
004A:  BTFSS  03.2
004B:  GOTO   050
....................       { 
....................          DATA=GETC(); 
004C:  BTFSS  0C.5
004D:  GOTO   04C
004E:  MOVF   1A,W
004F:  MOVWF  20
....................       } 
....................       IF(DATA=='S') 
0050:  MOVF   20,W
0051:  SUBLW  53
0052:  BTFSS  03.2
0053:  GOTO   059
....................       OUTPUT_HIGH(FEEDBACK); 
0054:  BSF    03.5
0055:  BCF    08.2
0056:  BCF    03.5
0057:  BSF    08.2
0058:  GOTO   061
....................       ELSE IF(DATA=='T') 
0059:  MOVF   20,W
005A:  SUBLW  54
005B:  BTFSS  03.2
005C:  GOTO   061
....................       OUTPUT_LOW(FEEDBACK); 
005D:  BSF    03.5
005E:  BCF    08.2
005F:  BCF    03.5
0060:  BCF    08.2
0061:  GOTO   034
....................    } 
....................     
.................... } 
0062:  SLEEP

Configuration Fuses:
   Word  1: 2FE5   INTRC NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
