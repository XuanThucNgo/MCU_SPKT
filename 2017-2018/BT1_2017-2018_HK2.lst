CCS PCM C Compiler, Version 5.015, 5967               14-Dec-23 18:39

               Filename:   E:\BAI TAP VXL\DETHI-GIAIDETHI\2017-2018\BT1_2017-2018_HK2.lst

               ROM used:   249 words (3%)
                           Largest free fragment is 2048
               RAM used:   10 (3%) at main() level
                           15 (4%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03D
0003:  NOP
.................... #INCLUDE<16F887.H> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  C0
0009:  RETLW  F9
000A:  RETLW  A4
000B:  RETLW  B0
000C:  RETLW  99
000D:  RETLW  92
000E:  RETLW  82
000F:  RETLW  F8
0010:  RETLW  80
0011:  RETLW  90
*
0026:  MOVLW  10
0027:  MOVWF  29
0028:  CLRF   77
0029:  CLRF   7A
002A:  RRF    26,F
002B:  RRF    25,F
002C:  BTFSS  03.0
002D:  GOTO   034
002E:  MOVF   27,W
002F:  ADDWF  77,F
0030:  BTFSC  03.0
0031:  INCF   7A,F
0032:  MOVF   28,W
0033:  ADDWF  7A,F
0034:  RRF    7A,F
0035:  RRF    77,F
0036:  RRF    79,F
0037:  RRF    78,F
0038:  DECFSZ 29,F
0039:  GOTO   02A
003A:  BCF    0A.3
003B:  BCF    0A.4
003C:  GOTO   0C5 (RETURN)
....................  
.................... #list 
....................  
.................... #FUSES HS 
.................... #USE DELAY(CLOCK=20M) 
*
0012:  MOVLW  23
0013:  MOVWF  04
0014:  BCF    03.7
0015:  MOVF   00,W
0016:  BTFSC  03.2
0017:  GOTO   025
0018:  MOVLW  06
0019:  MOVWF  78
001A:  CLRF   77
001B:  DECFSZ 77,F
001C:  GOTO   01B
001D:  DECFSZ 78,F
001E:  GOTO   01A
001F:  MOVLW  7B
0020:  MOVWF  77
0021:  DECFSZ 77,F
0022:  GOTO   021
0023:  DECFSZ 00,F
0024:  GOTO   018
0025:  RETURN
....................  
.................... CONST UNSIGNED INT8 MA7DOAN[10] = {0XC0, 0XF9, 0XA4, 0XB0, 0X99, 0X92, 0X82, 0XF8, 0X80, 0X90}; 
....................  
.................... #DEFINE ADJ PIN_B0 
.................... #DEFINE ON  PIN_B1  
.................... #DEFINE OFF PIN_B2 
....................  
.................... UNSIGNED INT8 LEVEL=5; 
.................... INT1 STATUS=0; //0 STOP 
....................                //1 RUN 
....................  
.................... VOID MAIN() 
*
003D:  MOVF   03,W
003E:  ANDLW  1F
003F:  MOVWF  03
0040:  MOVLW  05
0041:  MOVWF  20
0042:  BCF    21.0
0043:  MOVLW  FF
0044:  MOVWF  22
0045:  BSF    03.5
0046:  BSF    03.6
0047:  MOVF   09,W
0048:  ANDLW  C0
0049:  MOVWF  09
004A:  BCF    03.6
004B:  BCF    1F.4
004C:  BCF    1F.5
004D:  MOVLW  00
004E:  BSF    03.6
004F:  MOVWF  08
0050:  BCF    03.5
0051:  CLRF   07
0052:  CLRF   08
0053:  CLRF   09
0054:  BCF    03.7
.................... { 
....................    SET_TRIS_B(0XFF); 
0055:  MOVLW  FF
0056:  BSF    03.5
0057:  BCF    03.6
0058:  MOVWF  06
....................    SET_TRIS_C(0X00); 
0059:  MOVLW  00
005A:  MOVWF  07
005B:  BCF    03.5
005C:  MOVWF  22
....................    SET_TRIS_D(0X00); 
005D:  BSF    03.5
005E:  MOVWF  08
....................     
....................    SETUP_TIMER_2(T2_DIV_BY_16,124,1);  //PR2=124 => MAXDUTY=(124+1)X4=500   
005F:  MOVWF  78
0060:  IORLW  06
0061:  BCF    03.5
0062:  MOVWF  12
0063:  MOVLW  7C
0064:  BSF    03.5
0065:  MOVWF  12
....................                                        //10 CAP DO 0-1-2-3-4-5-6-7-8-9      500/10=50 
....................                                        //MOI CAP DO TUONG UNG VOI 50 DUTY 
....................    SETUP_CCP1(CCP_PWM); //RC2 
0066:  BCF    03.5
0067:  BCF    22.2
0068:  MOVF   22,W
0069:  BSF    03.5
006A:  MOVWF  07
006B:  BCF    03.5
006C:  BCF    07.2
006D:  MOVLW  0C
006E:  MOVWF  17
006F:  BSF    03.5
0070:  CLRF   1B
0071:  CLRF   1C
0072:  MOVLW  01
0073:  MOVWF  1D
....................    SET_TIMER2(0); 
0074:  BCF    03.5
0075:  CLRF   11
....................    SET_PWM1_DUTY(0); //BAN DAU DUNG DONG CO 
0076:  CLRF   15
....................    OUTPUT_D(MA7DOAN[LEVEL]); 
0077:  MOVF   20,W
0078:  CALL   004
0079:  MOVWF  23
007A:  BSF    03.5
007B:  CLRF   08
007C:  BCF    03.5
007D:  MOVF   23,W
007E:  MOVWF  08
....................    SETUP_CCP1(CCP_OFF); 
007F:  MOVLW  F0
0080:  ANDWF  17,F
....................     
....................    WHILE(TRUE) 
....................    {       
....................       //KIEM TRA NUT NHAN ON 
....................       IF(INPUT(ON)==0) 
0081:  BSF    03.5
0082:  BSF    06.1
0083:  BCF    03.5
0084:  BTFSC  06.1
0085:  GOTO   094
....................       { 
....................          DELAY_MS(10); 
0086:  MOVLW  0A
0087:  MOVWF  23
0088:  CALL   012
....................          IF(INPUT(ON)==0) 
0089:  BSF    03.5
008A:  BSF    06.1
008B:  BCF    03.5
008C:  BTFSC  06.1
008D:  GOTO   094
....................          { 
....................             STATUS=1; 
008E:  BSF    21.0
....................             WHILE(INPUT(ON)==0); 
008F:  BSF    03.5
0090:  BSF    06.1
0091:  BCF    03.5
0092:  BTFSS  06.1
0093:  GOTO   08F
....................          } 
....................       } 
....................        //KIEM TRA NUT NHAN OFF 
....................       IF(INPUT(OFF)==0) 
0094:  BSF    03.5
0095:  BSF    06.2
0096:  BCF    03.5
0097:  BTFSC  06.2
0098:  GOTO   0A7
....................       { 
....................          DELAY_MS(10); 
0099:  MOVLW  0A
009A:  MOVWF  23
009B:  CALL   012
....................          IF(INPUT(OFF)==0) 
009C:  BSF    03.5
009D:  BSF    06.2
009E:  BCF    03.5
009F:  BTFSC  06.2
00A0:  GOTO   0A7
....................          { 
....................             STATUS=0; 
00A1:  BCF    21.0
....................             WHILE(INPUT(OFF)==0); 
00A2:  BSF    03.5
00A3:  BSF    06.2
00A4:  BCF    03.5
00A5:  BTFSS  06.2
00A6:  GOTO   0A2
....................          } 
....................       } 
....................        
....................       //KIEM TRA RUN/STOP 
....................       IF(STATUS==0) 
00A7:  BTFSC  21.0
00A8:  GOTO   0AC
....................       { 
....................          //OFF 
....................          SETUP_CCP1(CCP_OFF); 
00A9:  MOVLW  F0
00AA:  ANDWF  17,F
....................       } 
00AB:  GOTO   0F7
....................       ELSE 
....................       { 
....................          //ON 
....................          SETUP_CCP1(CCP_PWM); //SETUP LAI 
00AC:  BCF    22.2
00AD:  MOVF   22,W
00AE:  BSF    03.5
00AF:  MOVWF  07
00B0:  BCF    03.5
00B1:  BCF    07.2
00B2:  MOVLW  0C
00B3:  MOVWF  17
00B4:  BSF    03.5
00B5:  CLRF   1B
00B6:  CLRF   1C
00B7:  MOVLW  01
00B8:  MOVWF  1D
....................          SET_PWM1_DUTY((UNSIGNED INT16)LEVEL*50); 
00B9:  BCF    03.5
00BA:  CLRF   24
00BB:  MOVF   20,W
00BC:  MOVWF  23
00BD:  MOVF   24,W
00BE:  MOVWF  26
00BF:  MOVF   20,W
00C0:  MOVWF  25
00C1:  CLRF   28
00C2:  MOVLW  32
00C3:  MOVWF  27
00C4:  GOTO   026
00C5:  MOVF   79,W
00C6:  MOVWF  24
00C7:  MOVF   78,W
00C8:  MOVWF  23
00C9:  RRF    24,F
00CA:  RRF    23,F
00CB:  RRF    24,F
00CC:  RRF    23,F
00CD:  RRF    24,F
00CE:  MOVF   23,W
00CF:  MOVWF  15
00D0:  RRF    24,F
00D1:  RRF    24,W
00D2:  ANDLW  30
00D3:  MOVWF  77
00D4:  MOVF   17,W
00D5:  ANDLW  CF
00D6:  IORWF  77,W
00D7:  MOVWF  17
....................          OUTPUT_D(MA7DOAN[LEVEL]); 
00D8:  MOVF   20,W
00D9:  CALL   004
00DA:  MOVWF  23
00DB:  BSF    03.5
00DC:  CLRF   08
00DD:  BCF    03.5
00DE:  MOVF   23,W
00DF:  MOVWF  08
....................          //KIEM TRA NUT NHAN ADJ 
....................          IF(INPUT(ADJ)==0) 
00E0:  BSF    03.5
00E1:  BSF    06.0
00E2:  BCF    03.5
00E3:  BTFSC  06.0
00E4:  GOTO   0F3
....................          { 
....................             DELAY_MS(10); 
00E5:  MOVLW  0A
00E6:  MOVWF  23
00E7:  CALL   012
....................             IF(INPUT(ADJ)==0) 
00E8:  BSF    03.5
00E9:  BSF    06.0
00EA:  BCF    03.5
00EB:  BTFSC  06.0
00EC:  GOTO   0F3
....................             { 
....................                LEVEL++; 
00ED:  INCF   20,F
....................                WHILE(INPUT(ADJ)==0); 
00EE:  BSF    03.5
00EF:  BSF    06.0
00F0:  BCF    03.5
00F1:  BTFSS  06.0
00F2:  GOTO   0EE
....................             } 
....................          } 
....................          IF(LEVEL>9)    LEVEL=0; 
00F3:  MOVF   20,W
00F4:  SUBLW  09
00F5:  BTFSS  03.0
00F6:  CLRF   20
....................       } 
00F7:  GOTO   081
....................    } 
....................     
.................... } 
....................  
00F8:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
