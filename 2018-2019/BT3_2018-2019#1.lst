CCS PCM C Compiler, Version 5.015, 5967               13-Dec-23 18:42

               Filename:   E:\BAI TAP VXL\DETHI-GIAIDETHI\2018-2019\BT3_2018-2019#1.lst

               ROM used:   353 words (4%)
                           Largest free fragment is 2048
               RAM used:   15 (4%) at main() level
                           23 (6%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0AA
0003:  NOP
.................... #INCLUDE<16F887.H> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
0004:  MOVF   2C,W
0005:  CLRF   78
0006:  SUBWF  2B,W
0007:  BTFSC  03.0
0008:  GOTO   00C
0009:  MOVF   2B,W
000A:  MOVWF  77
000B:  GOTO   018
000C:  CLRF   77
000D:  MOVLW  08
000E:  MOVWF  2D
000F:  RLF    2B,F
0010:  RLF    77,F
0011:  MOVF   2C,W
0012:  SUBWF  77,W
0013:  BTFSC  03.0
0014:  MOVWF  77
0015:  RLF    78,F
0016:  DECFSZ 2D,F
0017:  GOTO   00F
0018:  RETURN
0019:  MOVF   78,W
001A:  MOVF   29,W
001B:  MOVWF  2B
001C:  MOVLW  64
001D:  MOVWF  2C
001E:  CALL   004
001F:  MOVF   77,W
0020:  MOVWF  29
0021:  MOVF   78,W
0022:  MOVLW  30
0023:  BTFSS  03.2
0024:  GOTO   02C
0025:  BTFSS  2A.1
0026:  GOTO   034
0027:  BTFSC  2A.3
0028:  GOTO   034
0029:  BTFSC  2A.4
002A:  MOVLW  20
002B:  GOTO   02F
002C:  BCF    2A.3
002D:  BCF    2A.4
002E:  BSF    2A.0
002F:  ADDWF  78,F
0030:  MOVF   78,W
0031:  BTFSS  0C.4
0032:  GOTO   031
0033:  MOVWF  19
0034:  MOVF   29,W
0035:  MOVWF  2B
0036:  MOVLW  0A
0037:  MOVWF  2C
0038:  CALL   004
0039:  MOVF   77,W
003A:  MOVWF  29
003B:  MOVF   78,W
003C:  MOVLW  30
003D:  BTFSS  03.2
003E:  GOTO   045
003F:  BTFSC  2A.3
0040:  GOTO   04A
0041:  BTFSS  2A.0
0042:  GOTO   04A
0043:  BTFSC  2A.4
0044:  MOVLW  20
0045:  ADDWF  78,F
0046:  MOVF   78,W
0047:  BTFSS  0C.4
0048:  GOTO   047
0049:  MOVWF  19
004A:  MOVLW  30
004B:  ADDWF  29,F
004C:  MOVF   29,W
004D:  BTFSS  0C.4
004E:  GOTO   04D
004F:  MOVWF  19
0050:  RETURN
0051:  CLRF   31
0052:  MOVF   04,W
0053:  MOVWF  30
0054:  BCF    31.0
0055:  BTFSC  03.7
0056:  BSF    31.0
0057:  SWAPF  2A,W
0058:  IORLW  F0
0059:  MOVWF  2C
005A:  ADDWF  2C,F
005B:  ADDLW  E2
005C:  MOVWF  2D
005D:  ADDLW  32
005E:  MOVWF  2F
005F:  MOVF   2A,W
0060:  ANDLW  0F
0061:  ADDWF  2D,F
0062:  ADDWF  2D,F
0063:  ADDWF  2F,F
0064:  ADDLW  E9
0065:  MOVWF  2E
0066:  ADDWF  2E,F
0067:  ADDWF  2E,F
0068:  SWAPF  29,W
0069:  ANDLW  0F
006A:  ADDWF  2E,F
006B:  ADDWF  2F,F
006C:  RLF    2E,F
006D:  RLF    2F,F
006E:  COMF   2F,F
006F:  RLF    2F,F
0070:  MOVF   29,W
0071:  ANDLW  0F
0072:  ADDWF  2F,F
0073:  RLF    2C,F
0074:  MOVLW  07
0075:  MOVWF  2B
0076:  MOVLW  0A
0077:  ADDWF  2F,F
0078:  DECF   2E,F
0079:  BTFSS  03.0
007A:  GOTO   077
007B:  ADDWF  2E,F
007C:  DECF   2D,F
007D:  BTFSS  03.0
007E:  GOTO   07B
007F:  ADDWF  2D,F
0080:  DECF   2C,F
0081:  BTFSS  03.0
0082:  GOTO   07F
0083:  ADDWF  2C,F
0084:  DECF   2B,F
0085:  BTFSS  03.0
0086:  GOTO   083
0087:  MOVLW  2B
0088:  MOVWF  04
0089:  BCF    03.7
008A:  MOVLW  07
008B:  ANDWF  30,W
008C:  BCF    30.6
008D:  ADDWF  04,F
008E:  MOVLW  2F
008F:  SUBWF  04,W
0090:  BTFSC  03.2
0091:  BSF    30.6
0092:  MOVF   00,W
0093:  MOVWF  77
0094:  BTFSS  03.2
0095:  GOTO   09E
0096:  BTFSC  30.6
0097:  GOTO   09E
0098:  BTFSC  30.4
0099:  GOTO   0A6
009A:  BTFSC  30.3
009B:  GOTO   09E
009C:  MOVLW  20
009D:  GOTO   0A1
009E:  BSF    30.3
009F:  BCF    30.4
00A0:  MOVLW  30
00A1:  ADDWF  77,F
00A2:  MOVF   77,W
00A3:  BTFSS  0C.4
00A4:  GOTO   0A3
00A5:  MOVWF  19
00A6:  INCF   04,F
00A7:  BTFSS  30.6
00A8:  GOTO   08E
00A9:  RETURN
....................  
.................... #list 
....................  
.................... #FUSES HS 
.................... #USE DELAY(CLOCK=20M) 
.................... #USE RS232(BAUD=4800,BITS=8,STOP=1,PARITY=N, XMIT=PIN_C6,RCV=PIN_C7) 
....................  
.................... UNSIGNED INT8 PRODUCT=0,OLDPRODUCT=0; 
.................... UNSIGNED INT16 BOX=0,OLDBOX=0; 
.................... UNSIGNED CHAR RXDATA; 
.................... INT1 STATUS=0;    //0 STOP 
....................                   //1 RUN 
....................      
....................  
.................... VOID MAIN() 
00AA:  MOVF   03,W
00AB:  ANDLW  1F
00AC:  MOVWF  03
00AD:  BSF    03.5
00AE:  BSF    03.6
00AF:  BSF    07.3
00B0:  MOVLW  11
00B1:  BCF    03.6
00B2:  MOVWF  19
00B3:  MOVLW  04
00B4:  MOVWF  1A
00B5:  MOVLW  A6
00B6:  MOVWF  18
00B7:  MOVLW  90
00B8:  BCF    03.5
00B9:  MOVWF  18
00BA:  CLRF   20
00BB:  CLRF   21
00BC:  CLRF   23
00BD:  CLRF   22
00BE:  CLRF   25
00BF:  CLRF   24
00C0:  BCF    27.0
00C1:  MOVLW  FF
00C2:  MOVWF  28
00C3:  BSF    03.5
00C4:  BSF    03.6
00C5:  MOVF   09,W
00C6:  ANDLW  C0
00C7:  MOVWF  09
00C8:  BCF    03.6
00C9:  BCF    1F.4
00CA:  BCF    1F.5
00CB:  MOVLW  00
00CC:  BSF    03.6
00CD:  MOVWF  08
00CE:  BCF    03.5
00CF:  CLRF   07
00D0:  CLRF   08
00D1:  CLRF   09
00D2:  BCF    03.7
.................... { 
....................    SET_TRIS_C(0X81); 
00D3:  MOVLW  81
00D4:  BSF    03.5
00D5:  BCF    03.6
00D6:  MOVWF  07
00D7:  BCF    03.5
00D8:  MOVWF  28
....................    SETUP_TIMER_1(T1_EXTERNAL|T1_DIV_BY_1); 
00D9:  MOVLW  07
00DA:  MOVWF  10
....................    SET_TIMER1(0); 
00DB:  CLRF   0E
00DC:  CLRF   0F
00DD:  CLRF   0E
....................    PRINTF("P=%02U,B=%05LU",PRODUCT,BOX); 
00DE:  MOVLW  50
00DF:  BTFSS  0C.4
00E0:  GOTO   0DF
00E1:  MOVWF  19
00E2:  MOVLW  3D
00E3:  BTFSS  0C.4
00E4:  GOTO   0E3
00E5:  MOVWF  19
00E6:  MOVF   20,W
00E7:  MOVWF  29
00E8:  MOVLW  01
00E9:  MOVWF  2A
00EA:  CALL   019
00EB:  MOVLW  2C
00EC:  BTFSS  0C.4
00ED:  GOTO   0EC
00EE:  MOVWF  19
00EF:  MOVLW  42
00F0:  BTFSS  0C.4
00F1:  GOTO   0F0
00F2:  MOVWF  19
00F3:  MOVLW  3D
00F4:  BTFSS  0C.4
00F5:  GOTO   0F4
00F6:  MOVWF  19
00F7:  MOVLW  08
00F8:  MOVWF  04
00F9:  MOVF   23,W
00FA:  MOVWF  2A
00FB:  MOVF   22,W
00FC:  MOVWF  29
00FD:  CALL   051
....................    WHILE(TRUE) 
....................    { 
....................       IF(KBHIT()==1) 
00FE:  MOVLW  00
00FF:  BTFSC  0C.5
0100:  MOVLW  01
0101:  SUBLW  01
0102:  BTFSS  03.2
0103:  GOTO   116
....................       { 
....................          RXDATA=GETC(); 
0104:  BTFSS  0C.5
0105:  GOTO   104
0106:  MOVF   1A,W
0107:  MOVWF  26
....................          IF(RXDATA=='1') 
0108:  MOVF   26,W
0109:  SUBLW  31
010A:  BTFSS  03.2
010B:  GOTO   110
....................          { 
....................             STATUS=1; 
010C:  BSF    27.0
....................             SETUP_TIMER_1(T1_EXTERNAL|T1_DIV_BY_1); 
010D:  MOVLW  07
010E:  MOVWF  10
....................          } 
010F:  GOTO   116
....................          ELSE IF(RXDATA=='0') 
0110:  MOVF   26,W
0111:  SUBLW  30
0112:  BTFSS  03.2
0113:  GOTO   116
....................          { 
....................             STATUS=0; 
0114:  BCF    27.0
....................             SETUP_TIMER_1(T1_DISABLED ); 
0115:  CLRF   10
....................          } 
....................       } 
....................       IF(STATUS==1) 
0116:  BTFSS  27.0
0117:  GOTO   12D
....................       { 
....................          PRODUCT=GET_TIMER1(); 
0118:  MOVF   0F,W
0119:  MOVWF  7A
011A:  MOVF   0E,W
011B:  MOVWF  77
011C:  MOVF   0F,W
011D:  SUBWF  7A,W
011E:  BTFSS  03.2
011F:  GOTO   118
0120:  MOVF   77,W
0121:  MOVWF  20
....................          IF(PRODUCT>50) 
0122:  MOVF   20,W
0123:  SUBLW  32
0124:  BTFSC  03.0
0125:  GOTO   12D
....................          { 
....................             PRODUCT=0; 
0126:  CLRF   20
....................             SET_TIMER1(0); 
0127:  CLRF   0E
0128:  CLRF   0F
0129:  CLRF   0E
....................             BOX++; 
012A:  INCF   22,F
012B:  BTFSC  03.2
012C:  INCF   23,F
....................          } 
....................       } 
....................       IF(OLDPRODUCT!=PRODUCT||OLDBOX!=BOX) 
012D:  MOVF   20,W
012E:  SUBWF  21,W
012F:  BTFSS  03.2
0130:  GOTO   139
0131:  MOVF   22,W
0132:  SUBWF  24,W
0133:  BTFSS  03.2
0134:  GOTO   139
0135:  MOVF   23,W
0136:  SUBWF  25,W
0137:  BTFSC  03.2
0138:  GOTO   15F
....................       { 
....................          OLDPRODUCT=PRODUCT; 
0139:  MOVF   20,W
013A:  MOVWF  21
....................          OLDBOX=BOX; 
013B:  MOVF   23,W
013C:  MOVWF  25
013D:  MOVF   22,W
013E:  MOVWF  24
....................          PRINTF("P=%02U,B=%05LU",PRODUCT,BOX); 
013F:  MOVLW  50
0140:  BTFSS  0C.4
0141:  GOTO   140
0142:  MOVWF  19
0143:  MOVLW  3D
0144:  BTFSS  0C.4
0145:  GOTO   144
0146:  MOVWF  19
0147:  MOVF   20,W
0148:  MOVWF  29
0149:  MOVLW  01
014A:  MOVWF  2A
014B:  CALL   019
014C:  MOVLW  2C
014D:  BTFSS  0C.4
014E:  GOTO   14D
014F:  MOVWF  19
0150:  MOVLW  42
0151:  BTFSS  0C.4
0152:  GOTO   151
0153:  MOVWF  19
0154:  MOVLW  3D
0155:  BTFSS  0C.4
0156:  GOTO   155
0157:  MOVWF  19
0158:  MOVLW  08
0159:  MOVWF  04
015A:  MOVF   23,W
015B:  MOVWF  2A
015C:  MOVF   22,W
015D:  MOVWF  29
015E:  CALL   051
....................       } 
015F:  GOTO   0FE
....................    } 
.................... } 
....................  
0160:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
