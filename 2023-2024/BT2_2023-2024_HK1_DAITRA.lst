CCS PCM C Compiler, Version 5.015, 5967               02-Jan-24 20:24

               Filename:   E:\BAI TAP VXL\DETHI-GIAIDETHI\2023-2024\BT2_2023-2024_HK1_DAITRA.lst

               ROM used:   100 words (1%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01A
0003:  NOP
.................... #INCLUDE<16F887.H> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #FUSES INTRC 
.................... #USE DELAY(CLOCK=8M) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  BCF    0A.3
0018:  BCF    0A.4
0019:  GOTO   053 (RETURN)
....................  
.................... #DEFINE SW PIN_B0 
.................... #DEFINE BT PIN_B1 
.................... #DEFINE D1 PIN_D0 
....................  
.................... UNSIGNED INT1 STATUS=0; //0 OFF 
....................                         //1 ON 
....................  
.................... VOID MAIN() 
001A:  MOVF   03,W
001B:  ANDLW  1F
001C:  MOVWF  03
001D:  MOVLW  71
001E:  BSF    03.5
001F:  MOVWF  0F
0020:  MOVF   0F,W
0021:  BCF    03.5
0022:  BCF    20.0
0023:  BSF    03.5
0024:  BSF    03.6
0025:  MOVF   09,W
0026:  ANDLW  C0
0027:  MOVWF  09
0028:  BCF    03.6
0029:  BCF    1F.4
002A:  BCF    1F.5
002B:  MOVLW  00
002C:  BSF    03.6
002D:  MOVWF  08
002E:  BCF    03.5
002F:  CLRF   07
0030:  CLRF   08
0031:  CLRF   09
0032:  BCF    03.7
.................... { 
....................    SET_TRIS_B(0X03); 
0033:  MOVLW  03
0034:  BSF    03.5
0035:  BCF    03.6
0036:  MOVWF  06
....................    SET_TRIS_D(0X00); 
0037:  MOVLW  00
0038:  MOVWF  08
....................    //BAN DAU LED TAT 
....................    OUTPUT_LOW(D1); 
0039:  BCF    08.0
003A:  BCF    03.5
003B:  BCF    08.0
....................    WHILE(TRUE) 
....................    { 
....................       IF(INPUT(SW)==0)  STATUS=1; 
003C:  BSF    03.5
003D:  BSF    06.0
003E:  BCF    03.5
003F:  BTFSC  06.0
0040:  GOTO   043
0041:  BSF    20.0
0042:  GOTO   044
....................  
....................       ELSE              STATUS=0;   
0043:  BCF    20.0
....................       
....................       IF(STATUS==0) 
0044:  BTFSC  20.0
0045:  GOTO   04B
....................       { 
....................          OUTPUT_LOW(D1);    
0046:  BSF    03.5
0047:  BCF    08.0
0048:  BCF    03.5
0049:  BCF    08.0
....................       } 
004A:  GOTO   062
....................       ELSE 
....................       { 
....................          IF(INPUT(BT)==0) 
004B:  BSF    03.5
004C:  BSF    06.1
004D:  BCF    03.5
004E:  BTFSC  06.1
004F:  GOTO   062
....................          { 
....................             DELAY_MS(20); 
0050:  MOVLW  14
0051:  MOVWF  21
0052:  GOTO   004
....................             IF(INPUT(BT)==0) 
0053:  BSF    03.5
0054:  BSF    06.1
0055:  BCF    03.5
0056:  BTFSC  06.1
0057:  GOTO   062
....................             { 
....................                OUTPUT_TOGGLE(D1); 
0058:  BSF    03.5
0059:  BCF    08.0
005A:  MOVLW  01
005B:  BCF    03.5
005C:  XORWF  08,F
....................                WHILE(INPUT(BT)==0); 
005D:  BSF    03.5
005E:  BSF    06.1
005F:  BCF    03.5
0060:  BTFSS  06.1
0061:  GOTO   05D
....................             } 
....................          } 
....................       } 
0062:  GOTO   03C
....................        
....................    } 
.................... } 
0063:  SLEEP

Configuration Fuses:
   Word  1: 2FE5   INTRC NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
