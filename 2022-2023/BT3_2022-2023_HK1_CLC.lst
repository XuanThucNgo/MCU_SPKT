CCS PCM C Compiler, Version 5.015, 5967               18-Dec-23 14:05

               Filename:   E:\BAI TAP VXL\DETHI-GIAIDETHI\2022-2023\BT3_2022-2023_HK1_CLC.lst

               ROM used:   176 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03A
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #INCLUDE<16F887.H> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #FUSES HS 
.................... #USE DELAY(CLOCK=10M) 
....................  
.................... #USE RS232(BAUD=4800,BITS=8,STOP=1,PARITY=N, XMIT=PIN_C6,RCV=PIN_C7) 
....................  
.................... UNSIGNED INT8 DATA; 
....................  
.................... #INT_RDA 
.................... VOID NGAT_UART() 
.................... { 
....................    DATA=GETC(); //NHAN VE MA ASCII 
0031:  BTFSS  0C.5
0032:  GOTO   031
0033:  MOVF   1A,W
0034:  MOVWF  27
....................    CLEAR_INTERRUPT(INT_RDA);  
0035:  BCF    0C.5
0036:  BCF    0C.5
0037:  BCF    0A.3
0038:  BCF    0A.4
0039:  GOTO   01D
.................... } 
....................  
....................  
.................... VOID MAIN() 
003A:  MOVF   03,W
003B:  ANDLW  1F
003C:  MOVWF  03
003D:  BSF    03.5
003E:  BSF    03.6
003F:  BSF    07.3
0040:  MOVLW  08
0041:  BCF    03.6
0042:  MOVWF  19
0043:  MOVLW  02
0044:  MOVWF  1A
0045:  MOVLW  A6
0046:  MOVWF  18
0047:  MOVLW  90
0048:  BCF    03.5
0049:  MOVWF  18
004A:  MOVLW  FF
004B:  MOVWF  28
004C:  BSF    03.5
004D:  BSF    03.6
004E:  MOVF   09,W
004F:  ANDLW  C0
0050:  MOVWF  09
0051:  BCF    03.6
0052:  BCF    1F.4
0053:  BCF    1F.5
0054:  MOVLW  00
0055:  BSF    03.6
0056:  MOVWF  08
0057:  BCF    03.5
0058:  CLRF   07
0059:  CLRF   08
005A:  CLRF   09
005B:  BCF    03.7
.................... {  
....................    SET_TRIS_C(0X80); 
005C:  MOVLW  80
005D:  BSF    03.5
005E:  BCF    03.6
005F:  MOVWF  07
0060:  BCF    03.5
0061:  MOVWF  28
....................    //CHO PHEP NGAT 
....................    ENABLE_INTERRUPTS(GLOBAL); 
0062:  MOVLW  C0
0063:  IORWF  0B,F
....................    ENABLE_INTERRUPTS(INT_RDA); 
0064:  BSF    03.5
0065:  BSF    0C.5
....................    //SETUP_PWM 
....................    SETUP_TIMER_2(T2_DIV_BY_16,124,1);  //PR2=124 => MAXDUTY=(124+1)X4=500                                      
0066:  MOVLW  00
0067:  MOVWF  78
0068:  IORLW  06
0069:  BCF    03.5
006A:  MOVWF  12
006B:  MOVLW  7C
006C:  BSF    03.5
006D:  MOVWF  12
....................    SETUP_CCP1(CCP_PWM); //RC2 
006E:  BCF    03.5
006F:  BCF    28.2
0070:  MOVF   28,W
0071:  BSF    03.5
0072:  MOVWF  07
0073:  BCF    03.5
0074:  BCF    07.2
0075:  MOVLW  0C
0076:  MOVWF  17
0077:  BSF    03.5
0078:  CLRF   1B
0079:  CLRF   1C
007A:  MOVLW  01
007B:  MOVWF  1D
....................    SET_TIMER2(0); 
007C:  BCF    03.5
007D:  CLRF   11
....................    SET_PWM1_DUTY(0); //BAN DAU DUNG DONG CO 
007E:  CLRF   15
....................    WHILE(TRUE) 
....................    { 
....................       IF     (DATA=='S')   SET_PWM1_DUTY(0);//DUNG DONG CO 
007F:  MOVF   27,W
0080:  SUBLW  53
0081:  BTFSS  03.2
0082:  GOTO   085
0083:  CLRF   15
0084:  GOTO   0AE
....................       ELSE IF(DATA=='R')   SET_PWM1_DUTY((UNSIGNED INT16)125);//20% 
0085:  MOVF   27,W
0086:  SUBLW  52
0087:  BTFSS  03.2
0088:  GOTO   090
0089:  MOVLW  1F
008A:  MOVWF  15
008B:  MOVF   17,W
008C:  ANDLW  CF
008D:  IORLW  10
008E:  MOVWF  17
008F:  GOTO   0AE
....................       ELSE IF(DATA=='I')   SET_PWM1_DUTY((UNSIGNED INT16)100);//20% 
0090:  MOVF   27,W
0091:  SUBLW  49
0092:  BTFSS  03.2
0093:  GOTO   09A
0094:  MOVLW  19
0095:  MOVWF  15
0096:  MOVF   17,W
0097:  ANDLW  CF
0098:  MOVWF  17
0099:  GOTO   0AE
....................       ELSE IF(DATA=='E')   SET_PWM1_DUTY((UNSIGNED INT16)250);//50% 
009A:  MOVF   27,W
009B:  SUBLW  45
009C:  BTFSS  03.2
009D:  GOTO   0A5
009E:  MOVLW  3E
009F:  MOVWF  15
00A0:  MOVF   17,W
00A1:  ANDLW  CF
00A2:  IORLW  20
00A3:  MOVWF  17
00A4:  GOTO   0AE
....................       ELSE IF(DATA=='A')   SET_PWM1_DUTY((UNSIGNED INT16)500);//100% 
00A5:  MOVF   27,W
00A6:  SUBLW  41
00A7:  BTFSS  03.2
00A8:  GOTO   0AE
00A9:  MOVLW  7D
00AA:  MOVWF  15
00AB:  MOVF   17,W
00AC:  ANDLW  CF
00AD:  MOVWF  17
00AE:  GOTO   07F
....................    } 
.................... } 
00AF:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
